// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl
/**
 * Memory of 16K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.

	DMux(in=load, sel=address[0], a=dmux1, b=dmux2);
	
	DMux(in=dmux1, sel=address[1], a=dmux-o1, b=dmux-o2);
	DMux(in=dmux2, sel=address[1], a=dmux-o3, b=dmux-o4);
	
	RAM4K(in=in, load=dmux-o1, address=address[2..13], out=reg1);
	RAM4K(in=in, load=dmux-o2, address=address[2..13], out=reg2);
	RAM4K(in=in, load=dmux-o3, address=address[2..13], out=reg3);
	RAM4K(in=in, load=dmux-o4, address=address[2..13], out=reg4);

	Mux16(a=reg1, b=reg2, sel=address[1], out=mux5);
	Mux16(a=reg3, b=reg4, sel=address[1], out=mux6);
	
	Mux16(a=mux5, b=mux6, sel=address[0], out=out);
}
